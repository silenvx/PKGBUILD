diff -Narup tmux-1.8.orig/window-copy.c tmux-1.8/window-copy.c
--- tmux-1.8.orig/window-copy.c	2013-03-26 02:27:46.000000000 +0900
+++ tmux-1.8/window-copy.c	2013-03-29 04:27:29.393818225 +0900
@@ -79,6 +79,7 @@ void	window_copy_cursor_previous_word(st
 void	window_copy_scroll_up(struct window_pane *, u_int);
 void	window_copy_scroll_down(struct window_pane *, u_int);
 void	window_copy_rectangle_toggle(struct window_pane *);
+u_int	window_copy_position_fix_x(struct window_pane *, u_int);
 
 const struct window_mode window_copy_mode = {
 	window_copy_init,
@@ -1212,7 +1213,7 @@ window_copy_start_selection(struct windo
 	struct window_copy_mode_data	*data = wp->modedata;
 	struct screen			*s = &data->screen;
 
-	data->selx = data->cx;
+	data->selx = window_copy_position_fix_x(wp, data->cx);
 	data->sely = screen_hsize(data->backing) + data->cy - data->oy;
 
 	s->sel.flag = 1;
@@ -1296,7 +1297,7 @@ window_copy_get_selection(struct window_
 	 */
 
 	/* Find start and end. */
-	xx = data->cx;
+	xx = window_copy_position_fix_x(wp, data->cx);
 	yy = screen_hsize(data->backing) + data->cy - data->oy;
 	if (yy < data->sely || (yy == data->sely && xx < data->selx)) {
 		sx = xx; sy = yy;
@@ -1627,7 +1628,7 @@ window_copy_cursor_left(struct window_pa
 		window_copy_cursor_up(wp, 0);
 		window_copy_cursor_end_of_line(wp);
 	} else {
-		window_copy_update_cursor(wp, data->cx - 1, data->cy);
+		window_copy_update_cursor(wp, window_copy_position_fix_x(wp, window_copy_position_fix_x(wp, data->cx) - 1), data->cy);
 		if (window_copy_update_selection(wp))
 			window_copy_redraw_lines(wp, data->cy, 1);
 	}
@@ -1637,7 +1638,9 @@ void
 window_copy_cursor_right(struct window_pane *wp)
 {
 	struct window_copy_mode_data	*data = wp->modedata;
-	u_int				 px, py;
+	struct grid			*gd = data->backing->grid;
+	const struct grid_cell		*gc;
+	u_int				 px, py, xx;
 
 	if (data->screen.sel.flag && data->rectflag)
 		px = screen_size_x(&data->screen);
@@ -1650,7 +1653,10 @@ window_copy_cursor_right(struct window_p
 		window_copy_cursor_start_of_line(wp);
 		window_copy_cursor_down(wp, 0);
 	} else {
-		window_copy_update_cursor(wp, data->cx + 1, data->cy);
+		xx = window_copy_position_fix_x(wp, data->cx);
+		gc = grid_peek_cell(gd, xx, screen_hsize(data->backing) + data->cy - data->oy);
+		xx+=gc->xstate >> 4;
+		window_copy_update_cursor(wp, xx, data->cy);
 		if (window_copy_update_selection(wp))
 			window_copy_redraw_lines(wp, data->cy, 1);
 	}
@@ -2047,3 +2053,22 @@ window_copy_rectangle_toggle(struct wind
 	window_copy_update_selection(wp);
 	window_copy_redraw_screen(wp);
 }
+
+u_int
+window_copy_position_fix_x(struct window_pane *wp, u_int xx)
+{
+	struct window_copy_mode_data	*data = wp->modedata;
+	struct grid			*gd = data->backing->grid;
+	const struct grid_cell *gc;
+	u_int				i, yy;
+
+	yy = screen_hsize(data->backing) + data->cy - data->oy;
+	gc = grid_peek_cell(gd, xx, yy);
+	for (i=0;gc->flags & GRID_FLAG_PADDING && xx >= i;){
+		i++;
+		gc = grid_peek_cell(gd, xx - i, yy);
+	}
+	if (gc->xstate >> 4 != 1)
+		return (xx - i);
+	return xx;
+}
